jQuery does DOM manipulation and AJAX for you so you don't have to worry.

Content Delivery Network
cdnjs.com
Way to reroute common content to other servers so it doesn't load from your tiny server.
Used for for example jQuery.js, lodash.js, express.js, normalize.css... etc.
jQuery.min.js gives you the readable version of jQuery.

Semver
7.82.5
Major.Minor.Patch
Patch - Fixed something timely. If you update it's very unlikely it will cause your site to break.
Minor - Changed functionality but shouldn't cause a break. Keep an eye on it just to make sure.
Major - Changed something fundamental and your old code is unlikely to work.

api.jquery.com
onload becomes just $(function(){ ... }); called onDOMReady function.
sizzle = use css in javascript to select elements.
Now we've selected. Next comes manipulation.
You can chain methods! When using jQuery, CHAIN LIKE A BITCH!!
Don't requery! Don't select the same thing multiple times. Use Caching!
Save a selection as a variable and call the variable.
Use a $ sign infront of the variable to remind yourself that you've already masured it.
var $myDiv = $(#myDiv);
$myDiv.show()...

add return false at the end of functions to keep things safe. It stops prevent default and event bubbling.
prevent default to stop the normal behaviour from happening.
bubbling is the code going back up the DOM telling everything else that it happened.

You can trigger things to happen in the console.
$('#id').trigger('click')

animate.css adds animations by just adding classes

jQuery plugins - call them in the .js file.
Add all the css at the beginning of html
Add the bottom of document add:
1. Include jQuery ONCE!
2. Plugin script
3. Your own script
Then execute in your js file.
(read the plugin docs and follow their instructions)

Bulma, Foundation
fontawesome.io 3 - don't use 4! icons
material.io

https://jmsherry.github.io/ajax-templating/
Add repeated content. Like the cookie cutter.
With ES6 you can do templating natively so you might not need to use handlebars anymore
handebarsjs.com
<dl><dt>Name</dt><dd>{{name}}</dd>... should sit somewhere at the bottom of the html
{{}} means data will come in here later. These are the holes
var source = $(#mytemplate).html() grabs the HTML
var template = Handlebars.complie(source) turns it into a function
var data = {title: "new html", body: "this is the template"} grabs the data
var html = template(data) puts the dat in the holes
insert into the page via $('#targetArea').html(html)
